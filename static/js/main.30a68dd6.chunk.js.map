{"version":3,"sources":["components/About.js","components/AddTask.js","components/Footer.js","components/Button.js","components/Header.js","components/Task.js","components/Tasks.js","App.js","reportWebVitals.js","index.js"],"names":["About","to","AddTask","onAdd","useState","text","setText","day","setDay","reminder","setReminder","className","onSubmit","e","preventDefault","alert","type","placeholder","value","onChange","target","checked","currentTarget","Footer","Button","color","handleClick","onClick","style","backgroundColor","defaultProps","Header","title","showAdd","location","useLocation","pathname","Task","items","onDelete","onToogle","onDoubleClick","id","cursor","Tasks","data","map","task","App","showAddTask","setShowAddTask","setData","useEffect","a","fetchTasks","tasksFromServer","getTasks","fetch","response","json","console","log","fetchTask","addTask","method","headers","body","JSON","stringify","item","deleteItem","filter","toogleReminder","taskToToogle","updTask","path","exact","render","props","length","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.30a68dd6.chunk.js","sourcesContent":["import {Link} from 'react-router-dom'\r\nconst About =()=>{\r\n    return(\r\n        <div>\r\n            <h4>Version 1.0.0</h4>\r\n             <Link to='/'>Go Back</Link>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default About;","import { useState } from 'react';\r\n\r\nconst AddTask = ({ onAdd }) => {\r\n\r\n    const [text, setText] = useState('');\r\n    const [day, setDay] = useState('');\r\n    const [reminder, setReminder] = useState(false);\r\n\r\n    const onSubmit = (e) => {\r\n\r\n        if (!text) {\r\n            alert('Please add a task');\r\n            return\r\n        }\r\n\r\n        onAdd({ text, day, reminder })\r\n\r\n        setText('')\r\n        setDay('')\r\n        setReminder(false)\r\n\r\n\r\n        e.preventDefault();\r\n    }\r\n\r\n    return (\r\n\r\n        <form className=\"add-form\" onSubmit={onSubmit}>\r\n            <div className=\"form-control\">\r\n                <label>Task</label>\r\n                <input type=\"text\" placeholder=\"Add Task\" value={text} onChange={(e) => setText(e.target.value)} />\r\n            </div>\r\n            <div className=\"form-control\">\r\n                <label>Day & Time</label>\r\n                <input type=\"text\" placeholder=\"Add Day & Time\" value={day} onChange={(e) => setDay(e.target.value)} />\r\n            </div>\r\n            <div className=\"form-control form-control-check\">\r\n                <label>Set Reminder</label>\r\n                <input type=\"checkbox\" checked={reminder} value={reminder} onChange={(e) => setReminder(e.currentTarget.checked)} />\r\n            </div>\r\n\r\n            <input className=\"btn btn-block\" type=\"submit\" value=\"Save Task\" />\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default AddTask;","import {Link} from 'react-router-dom';\r\nconst Footer =() =>{\r\n    \r\n return(\r\n   <footer className=\"footer\">\r\n       <p>Copyright &copy; 2021</p>\r\n       <Link to='/about'>About</Link>\r\n   </footer>\r\n );  \r\n\r\n}\r\n\r\nexport default Footer;","import PropTypes from 'prop-types'\r\nconst Button = ({ color, text, handleClick }) => {\r\n\r\n    return (\r\n        <button onClick={handleClick} className=\"btn\" style={{ backgroundColor: color }}>{text}</button>\r\n    );\r\n}\r\n\r\nButton.defaultProps = {\r\n    color: 'steelblue',\r\n}\r\n\r\nButton.propTypes = {\r\n    color: PropTypes.string,\r\n    text: PropTypes.string,\r\n    onClick: PropTypes.func,\r\n}\r\n\r\nexport default Button;","import PropTypes from 'prop-types'\r\nimport { useLocation } from 'react-router-dom';\r\nimport Button from './Button'\r\n\r\nconst Header = ({ title, onAdd, showAdd }) => {\r\n\r\n    const location = useLocation();\r\n    \r\n    return (\r\n        <header className=\"header\">\r\n            <h1>{title}</h1>\r\n            {location.pathname === '/' && (<Button color={showAdd ? 'red' : 'green'} text={showAdd ? 'Close' : 'Add'} handleClick={onAdd} />\r\n            )}\r\n        </header>\r\n    );\r\n}\r\n\r\nHeader.defaultProps = {\r\n    title: 'Task Tracker',\r\n}\r\n\r\nHeader.propTypes = {\r\n    title: PropTypes.string,\r\n\r\n}\r\n\r\nexport default Header;","import { FaTimes } from 'react-icons/fa';\r\n\r\nconst Task = ({ items, onDelete, onToogle }) => {\r\n  return (\r\n    <div className={`task ${items.reminder ? 'reminder' : ''}`} onDoubleClick={() => onToogle(items.id)}>\r\n      <h3>{items.text} <FaTimes style={{ color: 'red', cursor: 'pointer' }} onClick={() => onDelete(items.id)} /></h3>\r\n      <p>{items.day}</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Task;","import Task from './Task';\r\n\r\nconst Tasks = ({ data, onDelete, onToogle }) => {\r\n\r\n  return (\r\n    <>\r\n      {data.map((task) => (\r\n        <Task key={task.id} items={task} onDelete={onDelete} onToogle={onToogle} />\r\n      ))}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Tasks;","import { useEffect, useState } from 'react';\nimport {BrowserRouter as Router,Route} from 'react-router-dom';\nimport About from './components/About';\nimport AddTask from './components/AddTask';\nimport Footer from './components/Footer';\nimport Header from './components/Header';\nimport Tasks from './components/Tasks';\n\nconst App = () => {\n\n  const [showAddTask, setShowAddTask] = useState(true);\n\n  const [data, setData] = useState([]);\n\n  useEffect(() => {\n\n    const getTasks = async () => {\n      const tasksFromServer = await fetchTasks();\n      setData(tasksFromServer);\n    }\n    getTasks()\n  }, []);\n\n  //Fetch Tasks\n  const fetchTasks = async () => {\n    const response = await fetch('http://localhost:5000/data');\n    const data = await response.json();\n\n    console.log(data);\n    return data;\n  }\n\n  //Fetch task\n  const fetchTask = async (id) => {\n    const response = await fetch(`http://localhost:5000/data/${id}`);\n    const data = await response.json();\n\n    console.log(data);\n    return data;\n  }\n\n  //Add Task\n  const addTask = async (task) => {\n\n    const response = await fetch('http://localhost:5000/data', {\n      method: 'POST',\n      headers: {\n        'Content-type': 'application/json'\n      },\n\n      body: JSON.stringify(task),\n    })\n\n    const item = await response.json();\n\n    setData([...data, item]);\n  }\n\n  const deleteItem = async (id) => {\n\n    await fetch(`http://localhost:5000/data/${id}`, {\n      method: 'DELETE'\n    })\n\n    setData(data.filter((items) => items.id !== id));\n  }\n\n  const toogleReminder = async (id) => {\n\n    const taskToToogle = await fetchTask(id);\n\n    const updTask = { ...taskToToogle, reminder: !taskToToogle.reminder }\n\n    const response = await fetch(`http://localhost:5000/data/${id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-type': 'application/json'\n      },\n      body: JSON.stringify(updTask)\n    });\n\n    const item = await response.json();\n\n    setData(data.map((task) => task.id === id ? {...task, reminder: item.reminder } : task));\n  }\n  return (\n    <Router>\n    <div className=\"container\">\n    <Header onAdd={() => setShowAddTask(!showAddTask)} showAdd={showAddTask} />\n    \n     <Route path='/' exact render={(props)=>(\n        <>\n         {showAddTask && <AddTask onAdd={addTask} />}\n         {data.length > 0 ? (<Tasks data={data} onDelete={deleteItem} onToogle={toogleReminder} />) : ('Sorry, No Tasks To Show. Please Add a Task')}\n        </>\n      )} />\n    <Route path='/about' component={About}/>\n    <Footer/>\n    </div>\n    </Router>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}